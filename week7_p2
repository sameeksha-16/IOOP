package week_7;

import java.util.Scanner;

class EMPLOYEE {
    String Ename;
    int Eid;
    float Basic, DA, Gross_Sal, Net_Sal;
    String email;

    void read() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the name of the employee: ");
        Ename = sc.nextLine();
        Ename = formatEmployeeName(Ename);
        email = generateEmail(Ename);
        System.out.println("Enter the ID of the employee: ");
        Eid = sc.nextInt();
        System.out.println("Enter the basic salary of the employee: ");
        Basic = sc.nextFloat();
    }

    void display() {
        System.out.println("Name: " + Ename);
        System.out.println("Email: " + email);
        System.out.println("ID: " + Eid);
        System.out.println("Basic Salary: " + Basic);
        System.out.println("Net Salary: " + Net_Sal);
    }

    void compute_net_sal() {
        DA = (float) (0.52 * Basic);
        Gross_Sal = Basic + DA;
        Net_Sal = Gross_Sal - (float) (0.3 * Gross_Sal);
        System.out.println("DA: " + DA);
        System.out.println("Gross Salary: " + Gross_Sal);
        System.out.println("Net Salary: " + Net_Sal);
    }

    String formatEmployeeName(String name) {
        String[] words = name.split(" ");
        StringBuilder formattedName = new StringBuilder();
        for (String word : words) {
            if (word.length() > 0) {
                formattedName.append(Character.toUpperCase(word.charAt(0)))
                             .append(word.substring(1).toLowerCase())
                             .append(" ");
            }
        }
        return formattedName.toString().trim();
    }

    String generateEmail(String name) {
        String[] words = name.split(" ");
        StringBuilder email = new StringBuilder();
        email.append(words[0].charAt(0)); // First initial
        email.append(words[words.length - 1]); // Last name
        email.append("@example.com");
        return email.toString().toLowerCase();
    }
}

class Parttime extends EMPLOYEE {
    int hoursworked;
    static final double hourlyrate = 15.0; // Set a fixed hourly rate for part-time employees

    void dis() {
        System.out.println("Hours worked: " + hoursworked);
        System.out.println("Hourly rate: " + hourlyrate);
    }

    void read() {
        super.read();
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter hours worked: ");
        hoursworked = sc.nextInt();
    }

    void compute_net_sal() {
        super.compute_net_sal();
        Net_Sal += hoursworked * hourlyrate;
    }

    void display() {
        super.display();
        dis();
    }
}

class Fulltime extends EMPLOYEE {
    double bonus;
    double deduction;
    static int choice;

    void dis() {
        if (choice == 1) {
            System.out.println("Bonus is: " + bonus);
        } else {
            System.out.println("Deduction is: " + deduction);
        }
    }

    void read() {
        super.read();
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter 1 for bonus or 2 for deduction: ");
        choice = sc.nextInt();
        if (choice == 1) {
            System.out.println("Enter bonus amount: ");
            bonus = sc.nextDouble();
        } else {
            System.out.println("Enter deduction amount: ");
            deduction = sc.nextDouble();
        }
    }

    void compute_net_sal() {
        super.compute_net_sal();
        if (choice == 1) {
            Net_Sal += bonus;
        } else {
            Net_Sal -= deduction;
        }
    }

    void display() {
        super.display();
        dis();
    }
}

public class program2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number of employees: ");
        int n = sc.nextInt();
        sc.nextLine(); // Consume the leftover newline character
        System.out.println("Enter employee type (part/full): ");
        String type = sc.nextLine();

        EMPLOYEE[] e = new EMPLOYEE[n];
        for (int i = 0; i < n; i++) {
            if (type.equals("part")) {
                e[i] = new Parttime();
                e[i].read();
                e[i].compute_net_sal();
            } else if (type.equals("full")) {
                e[i] = new Fulltime();
                e[i].read();
                e[i].compute_net_sal();
            } else {
                System.out.println("Invalid type entered.");
                i--; // Decrement to repeat the loop for a valid input
            }
        }

        // Display employee details
        for (int i = 0; i < n; i++) {
            e[i].display();
            System.out.println(); // Add a blank line between employees for better readability
        }

        sc.close();
    }
}
